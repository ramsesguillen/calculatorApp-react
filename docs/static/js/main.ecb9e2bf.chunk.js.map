{"version":3,"sources":["components/helpers/calculate.js","types/types.js","reducer/operationReducer.js","components/layouts/Input.js","components/InputResult.js","components/layouts/Containers.js","components/layouts/Button.js","components/layouts/Number.js","components/operations/Addition.js","components/operations/Division.js","components/operations/Equality.js","components/operations/Multiplication.js","components/operations/Restart.js","components/operations/Subtraction.js","components/Main.js","CalculatorApp.js","index.js"],"names":["calculate","state","isNaN","Number","numbers","add","stack","substrac","div","mult","ADDITION","SUBSTRACT","DIVISION","MULTIPLICATION","EQUALITY","RESTART","ADD_VALUE_INPUT","CONCAT","operationReducer","action","type","concat","payload","replace","Input","styled","input","ContainerInput","InputResult","dispatch","value","onChange","target","placeholder","autocomplete","Container","ContainerButton","ContainerMain","Button","button","props","red","black","Simbol","InputButton","character","onClick","Addition","disabled","Division","Equality","className","Multiplication","Restart","Subtraction","Main","useReducer","CalculatorApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecb9e2bf.chunk.js","sourcesContent":["\r\n\r\n\r\nexport const calculate = ( state ) => {\r\n\r\n    if ( isNaN( Number( state.numbers[0] ) ) ) {\r\n        return 0;\r\n    }\r\n\r\n        if ( state.add ) {\r\n            return Number( state.stack[0] ) + Number( state.numbers[0] );\r\n        } else if ( state.substrac ) {\r\n            return Number( state.stack[0] ) - Number( state.numbers[0] );\r\n        } else if ( state.div ) {\r\n            return Number( state.stack[0] ) / Number( state.numbers[0] );\r\n        } else if ( state.mult) {\r\n            return Number( state.stack[0] ) * Number( state.numbers[0] );\r\n        } else {\r\n            return Number( state.numbers[0]);\r\n        }\r\n}\r\n","\r\nexport const ADDITION = 'ADITION';\r\nexport const SUBSTRACT = 'SUBSTRACT';\r\nexport const DIVISION = 'DIVISION';\r\nexport const MULTIPLICATION = 'MULTIPLICATION';\r\n\r\nexport const EQUALITY = 'EQUALITY';\r\nexport const RESTART = 'RESTART';\r\n\r\nexport const ADD_VALUE_INPUT = 'ADD_VALUE_INPUT';\r\nexport const CONCAT = 'CONCAT';","\r\nimport { calculate } from '../components/helpers/calculate';\r\nimport { ADDITION, ADD_VALUE_INPUT, CONCAT, DIVISION, EQUALITY, MULTIPLICATION, RESTART, SUBSTRACT } from '../types/types';\r\n\r\nexport const operationReducer = ( state, action ) => {\r\n    switch ( action.type ) {\r\n        case EQUALITY:\r\n            return {\r\n                ...state,\r\n                numbers: [calculate( state )],\r\n                substrac: false,\r\n                add: false,\r\n                div: false,\r\n                mult: false,\r\n            }\r\n        case CONCAT:\r\n            return {\r\n                ...state,\r\n                numbers: [ \"\".concat(...state.numbers, action.payload)  ]\r\n            }\r\n        case ADD_VALUE_INPUT:\r\n            return {\r\n                ...state,\r\n                numbers: [ action.payload.replace(/[^0-9.]/g, '')  ]\r\n            }\r\n        case SUBSTRACT:\r\n            return {\r\n                ...state,\r\n                stack: state.numbers,\r\n                numbers: [],\r\n                substrac: true,\r\n                add: false,\r\n                div: false,\r\n                mult: false,\r\n            }\r\n        case ADDITION:\r\n            return {\r\n                ...state,\r\n                stack: state.numbers,\r\n                numbers: [],\r\n                add: true,\r\n                substrac: false,\r\n                div: false,\r\n                mult: false,\r\n            }\r\n        case DIVISION:\r\n            return {\r\n                ...state,\r\n                stack: state.numbers,\r\n                numbers: [],\r\n                add: false,\r\n                substrac: false,\r\n                div: true,\r\n                mult: false,\r\n            }\r\n        case MULTIPLICATION:\r\n            return {\r\n                ...state,\r\n                stack: state.numbers,\r\n                numbers: [],\r\n                add: false,\r\n                substrac: false,\r\n                div: false,\r\n                mult: true,\r\n            }\r\n        case RESTART:\r\n            return {\r\n                ...state,\r\n                numbers: [],\r\n                stack: [0],\r\n                substrac: false,\r\n                add: false,\r\n                div: false,\r\n                mult: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Input = styled.input`\r\n    background-color: #e1e1e1;\r\n    width: 20rem;\r\n    outline: none;\r\n    border: none;\r\n    text-align: right;\r\n    font-size: 1.8rem;\r\n`;\r\n\r\nexport const ContainerInput = styled.div`\r\n    padding: .5rem 1rem;\r\n    border-left: 6px solid #DCDCDC;\r\n    border-top: 6px solid #DCDCDC;\r\n    border-right: 9px solid #ecebeb;\r\n    border-bottom: 9px solid #ecebeb;\r\n`;\r\n\r\n","import React from 'react'\r\nimport { ADD_VALUE_INPUT } from '../types/types';\r\nimport { ContainerInput, Input } from './layouts/Input'\r\n\r\nexport const InputResult = ({ state, dispatch }) => {\r\n    let value = state.numbers;\r\n\r\n    const handleChange = ({target}) => {\r\n        if ( isNaN( Number( state.numbers[0] ) ) ) {\r\n            value = 0;\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_VALUE_INPUT,\r\n            payload: target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ContainerInput>\r\n            <Input\r\n                type=\"text\"\r\n                value={ value }\r\n                onChange={ handleChange }\r\n                placeholder={ state.stack[0]}\r\n                autocomplete=\"off\"\r\n            />\r\n        </ContainerInput>\r\n\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.div`\r\n    height: auto;\r\n    max-width: 1100px;\r\n    width: auto;\r\n    background-color: #e1e1e1;\r\n    padding: 3rem;\r\n    border-radius: 7px;\r\n    border: 2px solid #ecebeb;\r\n    -webkit-box-shadow: 14px 8px 14px -1px rgba(209,209,209,1);\r\n    -moz-box-shadow: 14px 8px 14px -1px rgba(209,209,209,1);\r\n    box-shadow: 14px 8px 14px -1px rgba(209,209,209,1);\r\n`;\r\n\r\nexport const ContainerButton = styled.div`\r\n    margin: 2.5rem 0 2rem 0;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-column-gap: 1rem;\r\n    grid-row-gap: 1.5rem;\r\n`;\r\n\r\nexport const ContainerMain = styled.div`\r\n    border-radius: 7px;\r\n    -webkit-box-shadow: -11px -8px 14px -1px rgba(255,255,255,1);\r\n    -moz-box-shadow: -11px -8px 14px -1px rgba(255,255,255,1);\r\n    box-shadow: -11px -8px 14px -1px rgba(255,255,255,1);\r\n`;","import styled from 'styled-components';\r\n\r\n\r\nexport const Button = styled.button`\r\n    -webkit-box-shadow: 10px 10px 31px -4px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 10px 10px 31px -4px rgba(0,0,0,0.75);\r\n    box-shadow: 10px 10px 31px -4px rgba(0,0,0,0.75);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    display: block;\r\n    width: 5rem;\r\n    height: 5rem;\r\n    font-size: 1.6rem;\r\n    font-weight: bold;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    background: ${ props => props.red ? 'red' : ( props.black ) ? '#000' : '#fff'};\r\n\r\n`;\r\nexport const Simbol = styled( Button )`\r\n    color: #fff;\r\n    font-size: 2rem;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const InputButton = styled.div`\r\n    border-radius: 1rem;\r\n    -webkit-box-shadow: -4px -4px 5px 0px rgba(255,255,255,1);\r\n    -moz-box-shadow: -4px -4px 5px 0px rgba(255,255,255,1);\r\n    box-shadow: -4px -4px 5px 0px rgba(255,255,255,1);\r\n`;","import React from 'react'\r\nimport { CONCAT } from '../../types/types';\r\nimport { Button, InputButton } from './Button'\r\n\r\nexport const Number = ({ dispatch, character }) => {\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: CONCAT,\r\n            payload: character\r\n        });\r\n    }\r\n    return (\r\n        <InputButton>\r\n            <Button\r\n                onClick={ handleClick }\r\n            >\r\n                { character }\r\n            </Button>\r\n        </InputButton>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { ADDITION } from '../../types/types'\r\nimport { Simbol, InputButton } from '../layouts/Button'\r\n\r\nexport const Addition = ({ dispatch, state }) => {\r\n\r\n    // const inactive = (state) ? 'inactive' : '';\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: ADDITION,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <InputButton>\r\n            <Simbol\r\n                onClick={ handleClick }\r\n                black\r\n                disabled={ state }\r\n            >\r\n                +\r\n            </Simbol>\r\n        </InputButton>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { DIVISION } from '../../types/types';\r\nimport { Simbol, InputButton } from '../layouts/Button'\r\n\r\nexport const Division = ({state, dispatch}) => {\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: DIVISION,\r\n        });\r\n    }\r\n    return (\r\n        <InputButton>\r\n            <Simbol\r\n                onClick={ handleClick }\r\n                disabled={ state }\r\n                black>\r\n                /\r\n            </Simbol>\r\n        </InputButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { EQUALITY } from '../../types/types';\r\nimport { Simbol, InputButton } from '../layouts/Button'\r\n\r\nexport const Equality = ({ dispatch }) => {\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: EQUALITY,\r\n        });\r\n    }\r\n    return (\r\n        <InputButton>\r\n            <Simbol\r\n                onClick={ handleClick }\r\n                className=\"simbol\" black>\r\n                =\r\n            </Simbol>\r\n        </InputButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MULTIPLICATION } from '../../types/types';\r\nimport { Simbol, InputButton } from '../layouts/Button'\r\n\r\nexport const Multiplication = ({ state, dispatch }) => {\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: MULTIPLICATION,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <InputButton>\r\n            <Simbol\r\n                onClick={ handleClick }\r\n                disabled={ state }\r\n                black>\r\n                x\r\n            </Simbol>\r\n        </InputButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { RESTART } from '../../types/types';\r\nimport { InputButton, Simbol } from '../layouts/Button'\r\n\r\nexport const Restart = ({ dispatch}) => {\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: RESTART,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <InputButton>\r\n            <Simbol\r\n                onClick={ handleClick }\r\n                red>\r\n                c\r\n            </Simbol>\r\n        </InputButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SUBSTRACT } from '../../types/types';\r\nimport { Simbol, InputButton } from '../layouts/Button'\r\n\r\nexport const Subtraction = ({ state, dispatch }) => {\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: SUBSTRACT\r\n        });\r\n    }\r\n\r\n    return (\r\n        <InputButton>\r\n            <Simbol\r\n                onClick={ handleClick }\r\n                disabled={ state }\r\n                black>\r\n                -\r\n            </Simbol>\r\n        </InputButton>\r\n    )\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { operationReducer } from '../reducer/operationReducer'\r\nimport { InputResult } from './InputResult'\r\nimport { ContainerMain, Container, ContainerButton } from './layouts/Containers'\r\nimport { Number } from './layouts/Number'\r\nimport { Addition } from './operations/Addition'\r\nimport { Division } from './operations/Division'\r\nimport { Equality } from './operations/Equality'\r\nimport { Multiplication } from './operations/Multiplication'\r\nimport { Restart } from './operations/Restart'\r\nimport { Subtraction } from './operations/Subtraction'\r\n\r\nexport const Main = () => {\r\n\r\n    const initialState = {\r\n        numbers: [],\r\n        stack: [0],\r\n        substrac: false,\r\n        add: false,\r\n        div: false,\r\n        mult: false,\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(operationReducer, initialState )\r\n\r\n    return (\r\n        <ContainerMain>\r\n            <Container>\r\n                <InputResult\r\n                    state= { state }\r\n                    dispatch={ dispatch }\r\n                />\r\n                <ContainerButton>\r\n                    <Number dispatch={ dispatch }  character=\"7\" />\r\n                    <Number dispatch={ dispatch }  character=\"8\" />\r\n                    <Number dispatch={ dispatch }  character=\"9\" />\r\n                    <Addition\r\n                        dispatch={ dispatch }\r\n                        state={ state.add }\r\n                    />\r\n                    <Number dispatch={ dispatch } character=\"4\" />\r\n                    <Number dispatch={ dispatch } character=\"5\" />\r\n                    <Number dispatch={ dispatch } character=\"6\" />\r\n                    <Subtraction\r\n                        dispatch={ dispatch }\r\n                        state={ state.substrac }\r\n                    />\r\n                    <Number dispatch={ dispatch } character=\"1\" />\r\n                    <Number dispatch={ dispatch } character=\"2\" />\r\n                    <Number dispatch={ dispatch } character=\"3\" />\r\n                    <Multiplication\r\n                        dispatch={ dispatch }\r\n                        state={ state.mult }\r\n                    />\r\n                    <Restart\r\n                        dispatch={ dispatch }\r\n                    />\r\n                    <Number dispatch={ dispatch } character=\"0\" />\r\n                    <Equality\r\n                        dispatch={ dispatch }\r\n                    />\r\n                    <Division\r\n                        dispatch={ dispatch }\r\n                        state={ state.div }\r\n                    />\r\n                </ContainerButton>\r\n            </Container>\r\n        </ContainerMain>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Main } from './components/Main'\r\n\r\nexport const CalculatorApp = () => {\r\n    return (\r\n        <Main />\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalculatorApp } from './CalculatorApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <CalculatorApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}